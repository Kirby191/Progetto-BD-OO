package BD;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.*;
import java.util.ArrayList;

public class RicercaCarriera {
    private JPanel panel10;
    private JButton cercaButton;
    private JButton indietroButton;
    private JTextField SSNTextField;
    private JFrame frame13;

    public RicercaCarriera(JFrame frameChiamante, Connection conn) {
        frame13 = new JFrame("Ricerca");
        frame13.setContentPane(panel10);
        frame13.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame13.pack();
        frame13.setVisible(true);
        frameChiamante.setVisible(false);

        cercaButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                try {
                    Statement st = conn.createStatement();
                    // Inizializza la query di base
                    StringBuilder query = new StringBuilder("SELECT * FROM carriera_giocatore(");

                    if (!SSNTextField.getText().isEmpty()) {
                        query.append("'").append(SSNTextField.getText()).append("')");
                    }
                    if (query.toString().equals("SELECT * FROM carriera_giocatore(")) {
                        JOptionPane.showMessageDialog(frame13, "Inserire almeno un parametro di ricerca");
                    } else {
                        ResultSet rs = st.executeQuery(query.toString());
                        String[] colonne = {"Inizio Carriera", "Fine Carriera", "Partite Giocate", "Goal Segnati", "Goal Subiti", "Cartellini Gialli", "Cartellini Rossi", "Assist"};
                        ArrayList<String[]> datiList = new ArrayList<>();
                        while (rs.next()) {
                            String[] riga = new String[8];
                            riga[0] = rs.getString("inizio_carr");
                            riga[1] = rs.getString("fine_carr");
                            riga[2] = rs.getString("s_part_gioc");
                            riga[3] = rs.getString("s_goal_segn");
                            riga[4] = rs.getString("s_goal_sub");
                            riga[5] = rs.getString("s_cart_g");
                            riga[6] = rs.getString("s_cart_r");
                            riga[7] = rs.getString("s_assist");

                            datiList.add(riga);
                        }
                        String[][] dati = new String[datiList.size()][8];
                        for (int i = 0; i < datiList.size(); i++) {
                            dati[i] = datiList.get(i);
                        }
                        ResultTabella result = new ResultTabella(frame13, colonne, dati);
                        rs.close();
                    }
                    st.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(frame13, ex.getMessage());
                }
            }
        });
        indietroButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                frame13.dispose();
                frameChiamante.setVisible(true);
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel10 = new JPanel();
        panel10.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel10, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        panel10.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("SSN");
        panel10.add(label1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cercaButton = new JButton();
        cercaButton.setText("Cerca");
        panel10.add(cercaButton, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        indietroButton = new JButton();
        indietroButton.setText("Indietro");
        panel10.add(indietroButton, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        SSNTextField = new JTextField();
        panel10.add(SSNTextField, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        label1.setLabelFor(SSNTextField);
    }
}
